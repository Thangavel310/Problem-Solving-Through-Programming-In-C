-----------------------------------------------------------------------------------------------------------------------------
Week 6 : Programming Assignment 1
-----------------------------------------------------------------------------------------------------------------------------
Write a C Program to find Largest Element of an Integer Array. 

C Program :

#include <stdio.h>
int main()
{
    int i, n, largest;
    int arr[100];
    scanf("%d", &n); 
    for(i = 0; i < n; ++i)
    {
       scanf("%d", &arr[i]); /* Accepts the array element from test data */
    } 	
    int max = -1000;
    for(i = 0;i < n;i++)
    {
        if(max  < arr[i])
   	    {
	        max = arr[i];
	      }
    }
    printf("Largest element = %d", max);
    return 0;
}



-----------------------------------------------------------------------------------------------------------------------------
Week 6 : Programming Assignment 2
-----------------------------------------------------------------------------------------------------------------------------

Write a C Program to print the array elements in reverse order (Not reverse sorted order. 
Just the last element will become first element, second last element will become second element and so on) 

C Program :

#include<stdio.h>
int main() 
{
   int arr[20], i, n;
   scanf("%d", &n);
   for (i = 0; i < n; i++) 
     scanf("%d", &arr[i]); 

   int temp,j;
   for(i = 0,j = n-1;i < n/2;i++,j--)
   {
 	    temp = arr[i];
 	    arr[i] = arr[j];
 	    arr[j] = temp;
   }
   for (i = 0; i < n; i++) 
   {
     printf("%d\n", arr[i]); // For printing the array elements 
   }
   return (0);
}



-----------------------------------------------------------------------------------------------------------------------------
Week 6 : Programming Assignment 3
-----------------------------------------------------------------------------------------------------------------------------

Write a C program to read Two One Dimensional Arrays of same data type (integer type)
and merge them into another One Dimensional Array of same type. 

C Program :

#include<stdio.h>
int main() 
{
   int arr1[20], arr2[20], array_new[40], n1, n2, size, i;
   scanf("%d", &n1); //Get the size of first array  
   for (i = 0; i < n1; i++)
      scanf("%d", &arr1[i]); //Accepts the values for first array 
 
   scanf("%d", &n2); //Get the size of second array
   for (i = 0; i < n2; i++)
      scanf("%d", &arr2[i]); //Accepts the values for second array

//Marge two arrays
   int index = 0;
   size = n1+n2;
   for(i = 0;i < n1;i++)
   {
       array_new[index++] = arr1[i];
   }
   for(i = 0;i < n2;i++)
   {
       array_new[index++] = arr2[i];
   }

//Printing after merging
   for (i = 0; i < size; i++) {
      printf("%d\n", array_new[i]);
   }
   return 0;
}



-----------------------------------------------------------------------------------------------------------------------------
Week 6 : Programming Assignment 4
-----------------------------------------------------------------------------------------------------------------------------
Write a C Program to delete duplicate elements from an array of integers.

C Program :

#include<stdio.h>
int main() 
{
   int array[50], i, size;
   scanf("%d", &size); /*Accepts the size of array from test case data */

   for (i = 0; i < size; i++)
   scanf("%d", &array[i]); /* Read the array elements from the test case data */
   int j,k; 
   for (i = 0; i < size; i ++)  
   {  
        for (j = i+1; j < size; j++)  
        {  
            if(array[i] == array[j])  
            {  
                for(k = j;k < size-1; k++)  
                {  
                    array[k] = array[k + 1];  
                }  
		            --j;
                --size;
            }
        }
   } 
   for (i = 0; i < size; i++) {
      printf("%d\n", array[i]);
   }
   return 0;
}

-----------------------------------------------------------------------------------------------------------------------------


